apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ required "a valid name is required" .Values.name }}
  labels:
    app: {{ required "a valid name is required" .Values.name }}

    app.kubernetes.io/name: {{ required "a valid name is required" .Values.name }}
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
    app.kubernetes.io/version: "{{ .Values.appVersion }}"

    helm.sh/chart-name: "{{ .Chart.Name }}"
    helm.sh/chart-version: "{{ .Chart.Version }}"
spec:
  replicas: {{ required "a valid replicas is required" .Values.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ required "a valid name is required" .Values.name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ required "a valid name is required" .Values.name }}
    spec:
      serviceAccountName: {{ required "a valid name is required" .Values.name }}
      containers:
        - name: {{ required "a valid name is required" .Values.name }}
          image: remote.adcr.io/ubi8/nginx-118:1-73
          ports:
            - name: webserver
              containerPort: 8081
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /version
              port: 8085
              scheme: HTTP
            initialDelaySeconds: {{ required "a valid livenessProbe.initialDelaySeconds is required" .Values.livenessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ required "a valid livenessProbe.timeoutSeconds is required" .Values.livenessProbe.timeoutSeconds }}
            periodSeconds: {{ required "a valid livenessProbe.periodSeconds is required" .Values.livenessProbe.periodSeconds }}
            successThreshold: {{ required "a valid livenessProbe.successThreshold is required" .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ required "a valid livenessProbe.failureThreshold is required" .Values.livenessProbe.failureThreshold }}

          readinessProbe:
            httpGet:
              path: /version
              port: 8085
              scheme: HTTP
            initialDelaySeconds: {{ required "a valid readinessProbe.initialDelaySeconds is required" .Values.readinessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ required "a valid readinessProbe.timeoutSeconds is required" .Values.readinessProbe.timeoutSeconds }}
            periodSeconds: {{ required "a valid readinessProbe.periodSeconds is required" .Values.readinessProbe.periodSeconds }}
            successThreshold: {{ required "a valid readinessProbe.successThreshold is required" .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ required "a valid readinessProbe.failureThreshold is required" .Values.readinessProbe.failureThreshold }}


          resources:
            requests:
              cpu: '{{ required "a valid resources.requests.cpu is required" .Values.resources.requests.cpu }}'
              memory: '{{ required "a valid resources.requests.memory is required" .Values.resources.requests.memory }}'
            limits:
              cpu: '{{ required "a valid resources.limits.cpu is required" .Values.resources.limits.cpu }}'
              memory: '{{ required "a valid resources.limits.memory is required" .Values.resources.limits.memory }}'